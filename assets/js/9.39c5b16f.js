(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{582:function(n,s,e){n.exports=e.p+"assets/img/image-20230915154623361.1801d91f.png"},583:function(n,s,e){n.exports=e.p+"assets/img/image-20230915160203264.0a0159d0.png"},584:function(n,s,e){n.exports=e.p+"assets/img/image-20230915163940798.786fd5c0.png"},585:function(n,s,e){n.exports=e.p+"assets/img/image-20230915164104047.ccf72060.png"},586:function(n,s,e){n.exports=e.p+"assets/img/image-20230915164211103.dd92ce03.png"},587:function(n,s,e){n.exports=e.p+"assets/img/image-20230915164413902.1c8c3f22.png"},618:function(n,s,e){"use strict";e.r(s);var a=e(6),t=Object(a.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#什么是静态虚拟通道"}},[n._v("什么是静态虚拟通道")]),a("ul",[a("li",[a("a",{attrs:{href:"#配置dll注册表"}},[n._v("配置dll注册表")])])])]),a("li",[a("a",{attrs:{href:"#编写dll"}},[n._v("编写DLL")]),a("ul",[a("li",[a("a",{attrs:{href:"#virtualchannelentry"}},[n._v("VirtualChannelEntry")])]),a("li",[a("a",{attrs:{href:"#rdpwgchanneliniteventfunc"}},[n._v("RdpwgChannelInitEventFunc")])]),a("li",[a("a",{attrs:{href:"#rdpwgchannelopeneventfunc"}},[n._v("RdpwgChannelOpenEventFunc")])]),a("li",[a("a",{attrs:{href:"#收尾"}},[n._v("收尾")])])])])])]),a("p"),n._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[n._v("最近在开发基于rdp协议的组件，因为需要用到rdp的虚拟通道拓展，前后折腾了好几天，这里记录一下顺带给后面做这部分的小伙伴一个参考。")])]),a("h2",{attrs:{id:"什么是静态虚拟通道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是静态虚拟通道"}},[n._v("#")]),n._v(" 什么是静态虚拟通道")]),n._v(" "),a("p",[n._v("虚拟通道的能力拓展是在RDP协议的协商阶段进行announce的，这部分在BCGR那一部分文档介绍的比较清楚、MCS就是Multi-Channel Support，RDP协议有许多通道拓展，例如RDPDR、RDPEI、RDPCLIRDR等，MCS通过使用多通道（channels）来实现，每个通道可以处理特定类型的数据传输。虚拟动态通道可以随时创建和销毁，并且静态虚拟通道是依赖于静态通道来进行建立的。")]),n._v(" "),a("p",[a("img",{attrs:{src:e(582),alt:"image-20230915154623361"}})]),n._v(" "),a("p",[n._v("另外RDP协议也留给了开发者一些接口、这样我们就能开发自己的拓展通道了。")]),n._v(" "),a("h3",{attrs:{id:"配置dll注册表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置dll注册表"}},[n._v("#")]),n._v(" 配置dll注册表")]),n._v(" "),a("p",[n._v("我们需要自己开发一个dll，然后将它配置到注册表中，这样TS Service在启动MSTSC的时候就能找到我们的拓展了。")]),n._v(" "),a("p",[n._v("在注册表中，将子项添加到以下位置之一：")]),n._v(" "),a("p",[a("strong",[n._v("HKEY_CURRENT_USER")]),n._v(" \\ "),a("strong",[n._v("Software")]),n._v(" \\ "),a("strong",[n._v("Microsoft")]),n._v(" \\ "),a("strong",[n._v("Terminal Server Client")]),n._v(" \\ "),a("strong",[n._v("Default")]),n._v(" \\ "),a("strong",[n._v("Addins")])]),n._v(" "),a("p",[a("strong",[n._v("HKEY_CURRENT_USER")]),n._v(" \\ "),a("strong",[n._v("Software")]),n._v(" \\ "),a("strong",[n._v("Microsoft")]),n._v(" \\ "),a("strong",[n._v("Terminal Server Client")]),n._v(" \\ "),a("strong",[n._v("connection")]),n._v(" \\ "),a("strong",[n._v("Addins")])]),n._v(" "),a("p",[n._v('例如，我们需要开发的通道拓展是"rdpgw"'),a("strong",[n._v("（需要注意的是通道名称建议用英文，并且字符串长度不要超过7）")]),n._v("，那么我们的配置的目录项就是")]),n._v(" "),a("p",[a("strong",[n._v("HKEY_CURRENT_USER \\ Software \\ Microsoft \\ Terminal Server Client \\ Default \\ Addins\\Default\\RDPGW")]),n._v(",如果你的机器不存在这个目录的话，就自己创建。")]),n._v(" "),a("p",[a("strong",[n._v("\\Default\\Addins")]),n._v("项下的条目适用于所有连接。"),a("strong",[n._v("\\connection\\Addins")]),n._v("键下的条目仅适用于由"),a("em",[n._v("connection")]),n._v("标识的连接。可以使用连接管理器创建和管理连接。")]),n._v(" "),a("p",[n._v("可以为子项指定任何名称。它必须包含"),a("strong",[n._v("REG_SZ")]),n._v("或"),a("strong",[n._v("REG_EXPAND_SZ")]),n._v("值，并且可以选择包含"),a("strong",[n._v("REG_DWORD")]),n._v("值。"),a("strong",[n._v("REG_SZ")]),n._v("或"),a("strong",[n._v("REG_EXPAND_SZ")]),n._v("值的语法如下。")]),n._v(" "),a("div",{staticClass:"language-syntax line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("Name = DLLname\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("p",[n._v("如果"),a("strong",[n._v("Name")]),n._v("是"),a("strong",[n._v("REG_EXPAND_SZ")]),n._v("值，则它可以包含在运行时扩展的未扩展环境变量。")]),n._v(" "),a("p",[a("em",[n._v("DLLname")]),n._v("的值可以是完全限定路径。如果"),a("em",[n._v("DLLname")]),n._v("不包含路径，则使用标准 DLL 搜索策略。")]),n._v(" "),a("p",[n._v("例如：")]),n._v(" "),a("p",[a("img",{attrs:{src:e(583),alt:"image-20230915160203264"}})]),n._v(" "),a("h2",{attrs:{id:"编写dll"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写dll"}},[n._v("#")]),n._v(" 编写DLL")]),n._v(" "),a("p",[n._v("需要注意这个DLL一定要抛出去一个函数"),a("code",[n._v("BOOL VCAPITYPE VirtualChannelEntry(PCHANNEL_ENTRY_POINTS pEntryPoints)")]),n._v(",一个字都不能差，因为这个是TS服务调用你的DLL的入口函数签名。至于其中使用的一些API，可以查看下面表格中的文档。")]),n._v(" "),a("table",[a("thead",[a("tr",[a("th",[n._v("功能")]),n._v(" "),a("th",[n._v("描述")])])]),n._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/MicrosoftDocs/win32/blob/docs/windows/desktop/api/Cchannel/nc-cchannel-virtualchannelinit",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[n._v("虚拟通道初始化")]),a("OutboundLink")],1)]),n._v(" "),a("td",[n._v("注册客户端要使用的虚拟通道的名称，并提供"),a("a",{attrs:{href:"https://github.com/MicrosoftDocs/win32/blob/docs/windows/desktop/api/Cchannel/nc-cchannel-channel_init_event_fn",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[n._v("VirtualChannelInitEvent")]),a("OutboundLink")],1),n._v("回调函数，远程桌面服务通过该函数通知客户端有关影响客户端连接的事件。")])]),n._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/MicrosoftDocs/win32/blob/docs/windows/desktop/api/Cchannel/nc-cchannel-virtualchannelopen",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[n._v("虚拟频道开放")]),a("OutboundLink")],1)]),n._v(" "),a("td",[n._v("打开指定虚拟通道的客户端，并提供"),a("a",{attrs:{href:"https://github.com/MicrosoftDocs/win32/blob/docs/windows/desktop/api/Cchannel/nc-cchannel-channel_open_event_fn",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[n._v("VirtualChannelOpenEvent")]),a("OutboundLink")],1),n._v("回调函数，远程桌面服务通过该回调函数通知客户端有关影响虚拟通道的事件。")])]),n._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/MicrosoftDocs/win32/blob/docs/windows/desktop/api/Cchannel/nc-cchannel-virtualchannelwrite",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[n._v("虚拟通道写入")]),a("OutboundLink")],1)]),n._v(" "),a("td",[n._v("将数据写入虚拟通道。远程桌面服务将此数据发送到虚拟通道的服务器端。服务器端调用"),a("a",{attrs:{href:"https://github.com/MicrosoftDocs/win32/blob/docs/windows/desktop/api/Wtsapi32/nf-wtsapi32-wtsvirtualchannelread",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[n._v("WTSVrtualChannelRead")]),a("OutboundLink")],1),n._v("函数读取数据。")])]),n._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/MicrosoftDocs/win32/blob/docs/windows/desktop/api/Cchannel/nc-cchannel-virtualchannelclose",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[n._v("虚拟通道关闭")]),a("OutboundLink")],1)]),n._v(" "),a("td",[n._v("关闭虚拟通道。")])])])]),n._v(" "),a("p",[n._v("这是作者写的demo，至于日志框架使用的是spdlog，这个无关紧要。这里面许多方法都是异步的，所以调用的时候一定要注意如果你使用了堆分配的内存时、不要在他函数返回后立刻释放，一定要在对应的回掉事件中处理。")]),n._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[n._v("需要注意的是这里一定要声明一个全局变量来保存pEntryPoints，因为这个方法是异步的，**VirtualChannelEntry函数返回后，该指针不再有效 **。并且一定要在"),a("code",[n._v("VirtualChannelEntry")]),n._v("里面调用"),a("code",[n._v("VirtualChannelInit")]),n._v("方法，因为这个API规定必须在这个方法里面调用，其他地方调用都会返回失败。")])]),a("p",[n._v("注意channel配置了一个选项是CHANNEL_OPTION_SHOW_PROTOCOL、它决定了数据通过 "),a("code",[n._v("VirtualChannelWrite")]),n._v(" 函数传递给服务器端插件时的呈现方式。如果设置了这个选项，服务器端插件会看到完整的虚拟通道协议，包括协议中的 "),a("code",[n._v("CHANNEL_PDU_HEADER")]),n._v("，如果未设置这个选项，服务器端插件只会看到通过 "),a("code",[n._v("VirtualChannelWrite")]),n._v(" 传递的数据部分。"),a("code",[n._v("CHANNEL_PDU_HEADER")]),n._v(" 是虚拟通道协议中的一个结构，用于描述传输的数据的头部信息。如果选项被设置，服务器端插件能够看到这个头部信息，否则只能看到实际传递的数据，而不包括头部信息。")]),n._v(" "),a("p",[n._v("我们先定义一些全局变量")]),n._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('constexpr auto CHANNEL_NAME = "rdpgw";\n\n//store pEntryPoints\nPCHANNEL_ENTRY_POINTS Global_Entry_Points = NULL;\nLPVOID RdpgwInitHandle = NULL;\nDWORD RdpgwHandle = 0;\n\n//buffer\nBYTE* RdpgwRecieveBuff = NULL;\nDWORD RecieveBuffLen = 0;\nDWORD RecieveBuffSize = 0;\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br")])]),a("h3",{attrs:{id:"virtualchannelentry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#virtualchannelentry"}},[n._v("#")]),n._v(" VirtualChannelEntry")]),n._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("VIRTUALCHANNELENTRY Virtualchannelentry;\n\nBOOL VCAPITYPE Virtualchannelentry(\n  [in] PCHANNEL_ENTRY_POINTS pEntryPoints\n)\n{...}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br")])]),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('//https://learn.microsoft.com/en-us/windows/win32/api/cchannel/nc-cchannel-virtualchannelentry\n//Pointer to a CHANNEL_ENTRY_POINTS structure that contains pointers to the client-side virtual channel functions.\n//This pointer is no longer valid after the VirtualChannelEntry function returns. You must make a copy of this \n//structure in extension-allocated memory for later use.\nBOOL VCAPITYPE VirtualChannelEntry(PCHANNEL_ENTRY_POINTS pEntryPoints) {\n    BOOL dwReesult = FALSE;\n    CHANNEL_DEF channel = {0};\n    DWORD status = 0;\n    size_t entryPointsSize = 0;\n    std::string homePath = "C:\\\\Users\\\\Administrator\\\\Desktop\\\\rdpgw.log";\n\n    logger = spdlog::basic_logger_mt("rdpgw_logger", homePath);\n    logger->set_level(spdlog::level::debug);\n    logger->flush_on(spdlog::level::debug);\n    logger->set_pattern("[%Y-%m-%d %H:%M:%S.%e] [%^%L%$] [thread %t] %v");\n\n    if (pEntryPoints == NULL) {\n        logger->error("internal error,pEntryPoints is null!");\n        goto end;\n    }\n    entryPointsSize = pEntryPoints->cbSize;\n\n    logger->info("VirtualChannelEntry loaded");\n    Global_Entry_Points = (PCHANNEL_ENTRY_POINTS)malloc(entryPointsSize);\n    if (Global_Entry_Points == NULL) {\n        logger->error("internal error,malloc error{}",GetLastError());\n        goto end;\n    }\n    memcpy(Global_Entry_Points, pEntryPoints, entryPointsSize);\n    \n    //check channle name and copy that to channle\'s name\n    if (strlen(CHANNEL_NAME) > CHANNEL_NAME_LEN)\n    {\n        logger->error("CHANNEL_NAME exceed max len of {}", CHANNEL_NAME_LEN);\n        goto end;\n    }\n    memcpy(channel.name, CHANNEL_NAME, strlen(CHANNEL_NAME) + 1);\n    channel.options = CHANNEL_OPTION_SHOW_PROTOCOL;\n    \n    //Specifies the level of virtual channel support. Set this parameter to VIRTUAL_CHANNEL_VERSION_WIN2000.\n    //Your VirtualChannelEntry implementation must call the VirtualChannelInit function to initialize access to virtual channels.\n    status = Global_Entry_Points->pVirtualChannelInit(&RdpgwInitHandle, &channel, 1,\n        VIRTUAL_CHANNEL_VERSION_WIN2000,RdpwgChannelInitEventFunc);\n    if (status != CHANNEL_RC_OK)\n    {\n        logger->info("VirtualChannelInit error {}",status);\n        goto end;\n    }\n\n    dwReesult = TRUE;\n    logger->debug("VirtualChannelInit finish");\nend:\n    return dwReesult;\n}\n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br")])]),a("h3",{attrs:{id:"rdpwgchanneliniteventfunc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rdpwgchanneliniteventfunc"}},[n._v("#")]),n._v(" RdpwgChannelInitEventFunc")]),n._v(" "),a("p",[n._v("这个方法会在"),a("code",[n._v("VirtualChannelEntry")]),n._v("函数返回后，客户端开始初始化时被调用，初始化客户端 DLL 对远程桌面服务虚拟通道的访问。客户端调用"),a("strong",[n._v("VirtualChannelInit")]),n._v("来注册其虚拟通道的名称。看一下他的函数签名")]),n._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("VIRTUALCHANNELINIT Virtualchannelinit;\n\nUINT VCAPITYPE Virtualchannelinit(\n  [in]      LPVOID *ppInitHandle,\n  [in, out] PCHANNEL_DEF pChannel,\n  [in]      INT channelCount,\n  [in]      ULONG versionRequested,\n  [in]      PCHANNEL_INIT_EVENT_FN pChannelInitEventProc\n)\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br")])]),a("p",[n._v("ppInitHandle:指向接收标识客户端连接的句柄的变量的指针。使用此句柄在后续调用VirtualChannelOpen函数时识别客户端 。")]),n._v(" "),a("p",[n._v("pChannel:"),a("a",{attrs:{href:"https://learn.microsoft.com/en-us/previous-versions/windows/embedded/aa513856(v=msdn.10)",target:"_blank",rel:"noopener noreferrer"}},[n._v("指向CHANNEL_DEF"),a("OutboundLink")],1),n._v("结构数组的指针 。每个结构都包含客户端 DLL 将打开的虚拟通道的名称和初始化选项。请注意，"),a("strong",[n._v("VirtualChannelInit")]),n._v("调用不会打开这些虚拟通道；它仅保留供该应用程序使用的名称。")]),n._v(" "),a("p",[n._v("channelCount:"),a("em",[n._v("指定pChannel")]),n._v("数组中的条目数。")]),n._v(" "),a("p",[n._v("versionRequested:虚拟通道版本、固定为"),a("strong",[n._v("VIRTUAL_CHANNEL_VERSION_WIN2000")])]),n._v(" "),a("p",[n._v("pChannelInitEventProc:指向应用程序定义的 "),a("a",{attrs:{href:"https://learn.microsoft.com/en-us/windows/desktop/api/cchannel/nc-cchannel-channel_init_event_fn",target:"_blank",rel:"noopener noreferrer"}},[n._v("VirtualChannelInitEvent"),a("OutboundLink")],1),n._v("函数的指针，远程桌面服务调用该函数来通知客户端 DLL 虚拟通道事件。")]),n._v(" "),a("p",[n._v("pChannelInitEventProc是一个函数指针，在TS Client对于数据包发送等一些事件时会被调用。看一下代码")]),n._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('VOID VCAPITYPE RdpwgChannelInitEventFunc(LPVOID pInitHandle, UINT event, LPVOID pData, UINT dataLength) {\n    DWORD status;\n       \n    switch (event) {\n        case CHANNEL_EVENT_CONNECTED:\n        {\n            status = Global_Entry_Points->pVirtualChannelOpen(RdpgwInitHandle, &RdpgwHandle, (PCHAR)CHANNEL_NAME, RdpwgChannelOpenEventFunc);\n            if (status != CHANNEL_RC_OK)\n            {\n                logger->error("error open rdpgw channel:{}", status);\n            }\n            break;\n        }\n        case CHANNEL_EVENT_DISCONNECTED:\n        {\n            logger->info("CHANNEL_EVENT_DISCONNECTED");\n            break;\n        }\n        case CHANNEL_EVENT_TERMINATED:\n        {\n            logger->info("CHANNEL_EVENT_TERMINATED");\n            Global_Entry_Points->pVirtualChannelClose(RdpgwHandle);\n            if(Global_Entry_Points) free(Global_Entry_Points);\n            if(RdpgwRecieveBuff) free(RdpgwRecieveBuff);\n            break;\n        }\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br")])]),a("p",[n._v("我们在CHANNEL_EVENT_CONNECTED时向server端请求打开这个虚拟通道，注意只有在你调用pVirtualChannelOpen时，server端才能收到TS Client发送的域建立请求。至于什么时候向server发送消息，在通道打开之后就可以做这件事情了")]),n._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('            const char* fristData = "Hello server!";\n            status = Global_Entry_Points->pVirtualChannelWrite(RdpgwHandle, LPVOID(fristData), strlen(fristData)+1, NULL);\n            if (status != CHANNEL_RC_OK)\n            {\n                logger->error("error send first msg to server");\n                break;\n            }\n\n            logger->info("have sent the first msg to server {}", fristData);\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br")])]),a("p",[n._v("不过相信聪明的你一定已经发现了"),a("code",[n._v("VirtualChannelOpen")]),n._v("中又存在一个函数指针RdpwgChannelOpenEventFunc。没错，他就是你后面处理数据包的关键回掉了，接下来我们会讲。")]),n._v(" "),a("h3",{attrs:{id:"rdpwgchannelopeneventfunc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rdpwgchannelopeneventfunc"}},[n._v("#")]),n._v(" RdpwgChannelOpenEventFunc")]),n._v(" "),a("p",[n._v("先看一下函数签名")]),n._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("CHANNEL_OPEN_EVENT_FN ChannelOpenEventFn;\n\nVOID VCAPITYPE ChannelOpenEventFn(\n  [in] DWORD openHandle,\n  [in] UINT event,\n  [in] LPVOID pData,\n  [in] UINT32 dataLength,\n  [in] UINT32 totalLength,\n  [in] UINT32 dataFlags\n)\n{...}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br")])]),a("p",[n._v("这些参数比较好理解，openHandle其实就是一开始我们保存的句柄，类型时DWORD。event是指示引起通知的事件。该参数可以是以下值之一。CHANNEL_EVENT_DATA_RECEIVED、CHANNEL_EVENT_WRITE_CANCELLED、CHANNEL_EVENT_WRITE_COMPLETE。")]),n._v(" "),a("p",[n._v("其中CHANNEL_EVENT_DATA_RECEIVED中dataFlags又有四种不同的类型:")]),n._v(" "),a("p",[n._v("CHANNEL_FLAG_FIRST chunk 是单个写操作写入的数据的开始。")]),n._v(" "),a("p",[n._v("CHANNEL_FLAG_LAST chunk是单次写操作写入的数据的结尾。")]),n._v(" "),a("p",[n._v("CHANNEL_FLAG_MIDDLE 这是默认设置。该块位于由单个写操作写入的数据块的中间。")]),n._v(" "),a("p",[n._v("CHANNEL_FLAG_ONLY 该块包含来自单个写入操作的所有数据。")]),n._v(" "),a("p",[n._v("其实就是指示你现在数据接受/发送到哪一步了，值得注意的是文档里面特意说明了一定要使用位运算来比较。")]),n._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('\t\t\t\tif (totalLength > RecieveBuffLen)\n        {\n            BYTE* RdpgwRecieveBuffTmp = (BYTE*)realloc(RdpgwRecieveBuff, totalLength);\n            if (!RdpgwRecieveBuffTmp)\n            {\n                logger->error("realloc error {}", GetLastError());\n                return;\n            }\n            RdpgwRecieveBuff = RdpgwRecieveBuffTmp;\n            RecieveBuffLen = totalLength;\n        }\n\n        memcpy_s(RdpgwRecieveBuff + RecieveBuffSize, RecieveBuffLen - RecieveBuffSize, pData, dataLength);\n        RecieveBuffSize += dataLength;\n\n        //CHANNEL_FLAG_FIRST || CHANNEL_FLAG_MIDDLE\n        if ((dataFlags & CHANNEL_FLAG_FIRST)|| !(dataFlags & CHANNEL_FLAG_FIRST) && !(dataFlags & CHANNEL_FLAG_LAST))\n        {\n            //do nothing\n            break;\n        }\n\n        //CHANNEL_FLAG_LAST || CHANNEL_FLAG_ONLY\n        if ((dataFlags & CHANNEL_FLAG_LAST) || (dataFlags & CHANNEL_FLAG_ONLY))\n        {\n            //write back to server\n            status = Global_Entry_Points->pVirtualChannelWrite(RdpgwHandle, RdpgwRecieveBuff, RecieveBuffSize, NULL);\n            if (status!= CHANNEL_RC_OK)\n            {\n                logger->error("write back to server failed {}", status);\n            }\n\n            logger->info("write {} bytes back to server", RecieveBuffSize);\n            //clear buffer\n            memset(RdpgwRecieveBuff, 0,RecieveBuffLen);\n            RecieveBuffSize = 0;\n        }\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br")])]),a("h3",{attrs:{id:"收尾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#收尾"}},[n._v("#")]),n._v(" 收尾")]),n._v(" "),a("p",[n._v("然后我们把这份代码编译成dll，然后启动mstsc")]),n._v(" "),a("p",[a("img",{attrs:{src:e(584),alt:"image-20230915163940798"}})]),n._v(" "),a("p",[n._v("可以看到mstsc已经load了我们的DLL。")]),n._v(" "),a("p",[n._v("看一下client DLL的日志：")]),n._v(" "),a("p",[a("img",{attrs:{src:e(585),alt:"image-20230915164104047"}})]),n._v(" "),a("p",[n._v("再看一下server的日志")]),n._v(" "),a("p",[a("img",{attrs:{src:e(586),alt:"image-20230915164211103"}})]),n._v(" "),a("p",[a("img",{attrs:{src:e(587),alt:"image-20230915164413902"}})]),n._v(" "),a("p",[n._v("可以看到我们自己写的拓展通道rdpgw已经建立成功了,并且收到了客户端的消息。现在就可以愉快的进行数据传输了！")]),n._v(" "),a("p",[n._v("参考文档:")]),n._v(" "),a("p",[n._v("https://learn.microsoft.com/en-us/windows/win32/termserv/virtual-channel-client-registration")]),n._v(" "),a("p",[n._v("https://learn.microsoft.com/en-us/windows/win32/api/cchannel/nc-cchannel-virtualchannelentry")]),n._v(" "),a("p",[n._v("https://github.com/MicrosoftDocs/win32/blob/docs/desktop-src/TermServ/virtual-channel-client-dll.md")])])}),[],!1,null,null,null);s.default=t.exports}}]);